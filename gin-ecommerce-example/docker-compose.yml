services:
  app:
    build: .
    ports:
      - "8081:8080"
    # 修改 depends_on，等待 mysql 健康后再启动
    depends_on:
      mysql:
        condition: service_healthy # 等待 mysql 健康检查成功
      redis:
        condition: service_started # 等待 redis 容器启动即可 (默认行为)
      elasticsearch:
        condition: service_started # 等待 elasticsearch 容器启动即可 (默认行为)
    environment:
      - SERVER_PORT=:8080

  mysql:
    image: mysql:8.4
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: ecommerce
    # 为 mysql 添加健康检查
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:7.4
    container_name: redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: elasticsearch
    ports:
      - "9201:9200"
      - "9301:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data

volumes:
  mysql_data:
  redis_data:
  es_data: